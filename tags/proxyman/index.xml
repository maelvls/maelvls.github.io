<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>proxyman on maelvls dev blog</title><link>https://maelvls.dev/tags/proxyman/</link><description>Recent content in proxyman on maelvls dev blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 06 Jan 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://maelvls.dev/tags/proxyman/index.xml" rel="self" type="application/rss+xml"/><item><title>What to do when Go ignores HTTP_PROXY for 127.0.0.1</title><link>https://maelvls.dev/2020/go-proxy-localhost-ignored/</link><pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate><guid>https://maelvls.dev/2020/go-proxy-localhost-ignored/</guid><description>I use Proxyman for inspecting the HTTP and HTTPS traffic coming from applications. For example, you may want to know which API calls are made by docker when running docker search. What I would do is
HTTPS_PROXY=http://localhost:9090 docker search ubuntu Since Proxyman acts like a proxy listening on 0.0.0.0:9090, I can see and replay all the HTTP calls, similarly to what you would do with the Chrome DevTools.
Note that HTTPS is a bit tricky and requires an additional step on macOS (settings &amp;gt; Proxyman CA &amp;gt; Generate new) but works flawlessly with any Go binary since Go supports HTTPS_PROXY by default.</description></item></channel></rss>