<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mitmproxy on maelvls dev blog</title><link>https://maelvls.dev/tags/mitmproxy/</link><description>Recent content in Mitmproxy on maelvls.dev</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 25 Sep 2021 10:31:19 +0200</lastBuildDate><atom:link href="https://maelvls.dev/tags/mitmproxy/index.xml" rel="self" type="application/rss+xml"/><item><title>mitmproxy hangs on TLS renegotiation: a debugging story</title><link>https://maelvls.dev/mitmproxy-tls-renegotiation-debugging-story/</link><pubDate>Sat, 25 Sep 2021 10:31:19 +0200</pubDate><guid>https://maelvls.dev/mitmproxy-tls-renegotiation-debugging-story/</guid><description>
I often use mitmproxy in order to see the HTTP calls that programs are making under the hood. vcert, a tool used for operating Venafi TPP and Venafi Cloud, did not seem to be working with mitmproxy. This post presents the steps I took to discover that the issue comes from an unsupported feature of mitmproxy: TLS renegotiation.</description></item><item><title>Using mitmproxy to understand what kubectl does under the hood</title><link>https://maelvls.dev/mitmproxy-kubectl/</link><pubDate>Wed, 01 Jul 2020 19:17:24 +0200</pubDate><guid>https://maelvls.dev/mitmproxy-kubectl/</guid><description>
Mitmproxy is an excellent tool that helps us understand what network calls are made by programs. And kubectl is one of these interesting programs, but it uses a mutual TLS authentication which is tricky to get right.</description></item></channel></rss>