<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on maelvls dev blog</title>
    <link>https://maelvls.dev/do-not-share-yet/tags/go/</link>
    <description>Recent content in go on maelvls.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Apr 2021 00:00:00 +0000</lastBuildDate>
    
    <atom:link href="https://maelvls.dev/do-not-share-yet/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>You should write comments</title>
      <link>https://maelvls.dev/do-not-share-yet/you-should-write-comments/</link>
      <pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/you-should-write-comments/</guid>
      <description>
      
      We often talk about avoiding unecessary comments that needlessly paraphrase what the code does. In this article, I gathered some thoughts about why writing comments is as important as writing the code itself.
      
      </description>
    </item>
    <item>
      <title>What to do when Go ignores HTTP_PROXY for 127.0.0.1</title>
      <link>https://maelvls.dev/do-not-share-yet/go-ignores-proxy-localhost/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/go-ignores-proxy-localhost/</guid>
      <description>
      
      At some point, the Go team chose to disable the proxy for requests coming from localhost or 127.0.0.1. This is annoying when debugging services locally.
      
      </description>
    </item>
    <item>
      <title>Go Happy Path: the Unindented Line of Sight</title>
      <link>https://maelvls.dev/do-not-share-yet/go-happy-line-of-sight/</link>
      <pubDate>Sat, 23 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/go-happy-line-of-sight/</guid>
      <description>
      
      Readability is a property we all love about Go. In other languages, it might be fine to have a lot of nested if statements; in Go, it is a good practice to keep away from overly-nested logic.
      
      </description>
    </item>
    <item>
      <title>Why is GO111MODULE everywhere, and everything about Go Modules (updated with Go 1.16)</title>
      <link>https://maelvls.dev/do-not-share-yet/go111module-everywhere/</link>
      <pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/go111module-everywhere/</guid>
      <description>
      
      GO111MODULE is all over the place. It appears in README install instructions, in Dockerfiles, in makefiles. On top of that, the behavior of GO111MODULE has changed from Go 1.11 to 1.12, changed again with Go 1.13 and Go 1.15 and changed a last time in Go 1.16.
      
      </description>
    </item>
    <item>
      <title>What the heck are Conditions in Kubernetes controllers?</title>
      <link>https://maelvls.dev/do-not-share-yet/kubernetes-conditions/</link>
      <pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/kubernetes-conditions/</guid>
      <description>
      
      Although progress is being made, Kubernetes controllers and operators still require prior knowledge about Kubernetes internals. Information on how to set the status is scattered across comments, issues, PRs and the Kubernetes code itself. Conditions may be a good solution for your controller, but for what?
      
      </description>
    </item>
    
  </channel>
</rss>
