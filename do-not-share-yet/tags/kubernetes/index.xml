<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on maelvls dev blog</title>
    <link>https://maelvls.dev/do-not-share-yet/tags/kubernetes/</link>
    <description>Recent content in Kubernetes on maelvls.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Jul 2020 16:33:55 +0200</lastBuildDate>
    
    <atom:link href="https://maelvls.dev/do-not-share-yet/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Understanding the Available condition of a Kubernetes deployment</title>
      <link>https://maelvls.dev/do-not-share-yet/deployment-available-condition/</link>
      <pubDate>Tue, 07 Jul 2020 16:33:55 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/deployment-available-condition/</guid>
      <description>
      
      Although the Kubernetes documentation is excellent, the API reference does not document the conditions that can be found in a deployment&#39;s status. The Available condition has always eluded me!
      
      </description>
    </item>
    <item>
      <title>Pull-through Docker registry on Kind clusters</title>
      <link>https://maelvls.dev/do-not-share-yet/docker-proxy-registry-kind/</link>
      <pubDate>Fri, 03 Jul 2020 15:13:39 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/docker-proxy-registry-kind/</guid>
      <description>
      
      Kind offers an excellent UX to Kubernetes developers but lacks support for caching images; each time you recreate a new cluster, all the previous downloaded images are gone. In this post, I explain why the default Docker network is a trap and how to set up a registry &amp; make sure that it actually works.
      
      </description>
    </item>
    <item>
      <title>Using mitmproxy to understand what kubectl does under the hood</title>
      <link>https://maelvls.dev/do-not-share-yet/mitmproxy-kubectl/</link>
      <pubDate>Wed, 01 Jul 2020 19:17:24 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/mitmproxy-kubectl/</guid>
      <description>
      
      Mitmproxy is an excellent tool that helps us understand what network calls are made by programs. And kubectl is one of these interesting programs, but it uses a mutual TLS authentication which is tricky to get right.
      
      </description>
    </item>
    <item>
      <title>Learning Kubernetes Controllers</title>
      <link>https://maelvls.dev/do-not-share-yet/learning-kubernetes-controllers/</link>
      <pubDate>Wed, 22 Apr 2020 11:58:26 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/learning-kubernetes-controllers/</guid>
      <description>
      
      Kubernetes&#39; extensibility is probably its biggest strength. Controllers and CRDs are all over the place. But finding the right information to begin writing a controller isn&#39;t easy due to the sheer amount of tribal knowledge scattered everywhere. Here are some links to help you start.
      
      </description>
    </item>
    <item>
      <title>Kubernetes level-based behaviour</title>
      <link>https://maelvls.dev/do-not-share-yet/kubernetes-level-based-state/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/kubernetes-level-based-state/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>The Client-go Transitive Hell</title>
      <link>https://maelvls.dev/do-not-share-yet/client-go-transitive-hell/</link>
      <pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/client-go-transitive-hell/</guid>
      <description>
      
      Client-go is the client library that allows anyone (including Kubernetes itself) to talk to the Kubernetes apiserver. Recently, the Kubernetes team chose to release a breaking version of client-go that adds support for context.Context, without really giving anyone notice. In this post, I detail the workaround and what that happened.
      
      </description>
    </item>
    <item>
      <title>Migrating from GKE to Civo&#39;s K3s</title>
      <link>https://maelvls.dev/do-not-share-yet/from-gke-to-civo-k3s/</link>
      <pubDate>Sun, 22 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/from-gke-to-civo-k3s/</guid>
      <description>
      
      My free trial on GKE was ending in 2 days and I had to find a way to migrate away. I decided to switch to Civo&#39;s managed K3s.
      
      </description>
    </item>
    <item>
      <title>The Packet&#39;s-Eye View of a Kubernetes Service</title>
      <link>https://maelvls.dev/do-not-share-yet/packets-eye-kubernetes-service/</link>
      <pubDate>Sat, 14 Mar 2020 15:10:10 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/packets-eye-kubernetes-service/</guid>
      <description>
      
      The Service and Ingress respectively brings L4 and L7 traffics to your pods. In this article, I focus on how traffic flows in and what are the interactions between the ingress controller and the service-lb controller (the thing that creates the external load balancer). I also detail how the `hostPort` approach shapes traffic.
      
      </description>
    </item>
    <item>
      <title>Debugging Kubernetes Networking: my kube-dns is not working!</title>
      <link>https://maelvls.dev/do-not-share-yet/debugging-kubernetes-networking/</link>
      <pubDate>Sun, 26 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/debugging-kubernetes-networking/</guid>
      <description>
      
      Some pods were unable to connect to the kube-proxy pod on one of my GKE Kubernetes clusters. This post present an in-depth investigation using tcpdump, wireshark and iptables tracing.
      
      </description>
    </item>
    <item>
      <title>Avoid GKE&#39;s expensive load balancer by using hostPort</title>
      <link>https://maelvls.dev/do-not-share-yet/avoid-gke-lb-with-hostport/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/avoid-gke-lb-with-hostport/</guid>
      <description>
      
      I want to avoid using the expensive Google Network Load Balancer and instead do the load balancing in-cluster using akrobateo, which acts as a LoadBalancer controller.
      
      </description>
    </item>
    <item>
      <title>What the heck are Conditions in Kubernetes controllers?</title>
      <link>https://maelvls.dev/do-not-share-yet/kubernetes-conditions/</link>
      <pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/kubernetes-conditions/</guid>
      <description>
      
      Although progress is being made, Kubernetes controllers and operators still require prior knowledge about Kubernetes internals. Information on how to set the status is scattered across comments, issues, PRs and the Kubernetes code itself. Conditions may be a good solution for your controller, but for what?
      
      </description>
    </item>
    
  </channel>
</rss>
