<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kind on maelvls dev blog</title>
    <link>https://maelvls.dev/do-not-share-yet/tags/kind/</link>
    <description>Recent content in kind on maelvls.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 Jul 2020 15:13:39 +0200</lastBuildDate>
    
    <atom:link href="https://maelvls.dev/do-not-share-yet/tags/kind/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Pull-through Docker registry on Kind clusters on macOS</title>
      <link>https://maelvls.dev/do-not-share-yet/docker-proxy-registry-kind/</link>
      <pubDate>Fri, 03 Jul 2020 15:13:39 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/docker-proxy-registry-kind/</guid>
      <description>
      
      Kind offers an excellent UX to Kubernetes developers but lacks support for caching images; each time you recreate a new cluster, all the previous downloaded images are gone. In this post, I explain why the default Docker network is a trap and how to set up a registry &amp; make sure that it actually works.
      
      </description>
    </item>
    <item>
      <title>Using mitmproxy to understand what kubectl does under the hood</title>
      <link>https://maelvls.dev/do-not-share-yet/mitmproxy-kubectl/</link>
      <pubDate>Wed, 01 Jul 2020 19:17:24 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/mitmproxy-kubectl/</guid>
      <description>
      
      Mitmproxy is an excellent tool that helps us understand what network calls are made by programs. And kubectl is one of these interesting programs, but it uses a mutual TLS authentication which is tricky to get right.
      
      </description>
    </item>
    
  </channel>
</rss>
