<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2020s on maelvls dev blog</title>
    <link>https://maelvls.dev/do-not-share-yet/2020/</link>
    <description>Recent content in 2020s on maelvls.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 21 Jul 2020 10:07:11 +0200</lastBuildDate>
    
    <atom:link href="https://maelvls.dev/do-not-share-yet/2020/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Expose Service Using Kind on Macos</title>
      <link>https://maelvls.dev/do-not-share-yet/expose-service-using-kind-on-macos/</link>
      <pubDate>Tue, 21 Jul 2020 10:07:11 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/expose-service-using-kind-on-macos/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>Kind and Service Loadbalancer</title>
      <link>https://maelvls.dev/do-not-share-yet/kind-and-service-loadbalancer/</link>
      <pubDate>Tue, 21 Jul 2020 10:06:45 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/kind-and-service-loadbalancer/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>What Are Proxies</title>
      <link>https://maelvls.dev/do-not-share-yet/what-are-proxies/</link>
      <pubDate>Mon, 13 Jul 2020 14:18:40 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/what-are-proxies/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>Deepequal Is Slow</title>
      <link>https://maelvls.dev/do-not-share-yet/deepequal-is-slow/</link>
      <pubDate>Thu, 09 Jul 2020 09:02:48 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/deepequal-is-slow/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>Why Kubernetes Compares With Hash</title>
      <link>https://maelvls.dev/do-not-share-yet/why-kubernetes-compares-with-hash/</link>
      <pubDate>Wed, 08 Jul 2020 11:55:27 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/why-kubernetes-compares-with-hash/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>Digging Into Utf 8</title>
      <link>https://maelvls.dev/do-not-share-yet/digging-into-utf-8/</link>
      <pubDate>Wed, 08 Jul 2020 10:16:58 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/digging-into-utf-8/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>Understanding the Available condition of a Kubernetes deployment</title>
      <link>https://maelvls.dev/do-not-share-yet/deployment-available-condition/</link>
      <pubDate>Tue, 07 Jul 2020 16:33:55 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/deployment-available-condition/</guid>
      <description>
      
      Although the Kubernetes documentation is excellent, the API reference does not document the conditions that can be found in a deployment&#39;s status. The Available condition has always eluded me!
      
      </description>
    </item>
    <item>
      <title>Pull-through Docker registry on Kind clusters</title>
      <link>https://maelvls.dev/do-not-share-yet/docker-proxy-registry-kind/</link>
      <pubDate>Fri, 03 Jul 2020 15:13:39 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/docker-proxy-registry-kind/</guid>
      <description>
      
      Kind offers an excellent UX to Kubernetes developers but lacks support for caching images; each time you recreate a new cluster, all the previous downloaded images are gone. In this post, I explain why the default Docker network is a trap and how to set up a registry &amp; make sure that it actually works.
      
      </description>
    </item>
    <item>
      <title>Using mitmproxy to understand what kubectl does under the hood</title>
      <link>https://maelvls.dev/do-not-share-yet/mitmproxy-kubectl/</link>
      <pubDate>Wed, 01 Jul 2020 19:17:24 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/mitmproxy-kubectl/</guid>
      <description>
      
      Mitmproxy is an excellent tool that helps us understand what network calls are made by programs. And kubectl is one of these interesting programs, but it uses a mutual TLS authentication which is tricky to get right.
      
      </description>
    </item>
    <item>
      <title>Epic journey with statically and dynamically-linked libraries (.a, .so)</title>
      <link>https://maelvls.dev/do-not-share-yet/static-libraries-and-autoconf-hell/</link>
      <pubDate>Sat, 30 May 2020 20:45:06 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/static-libraries-and-autoconf-hell/</guid>
      <description>
      
      Dynamic libraries and PIC (position-independant code) are great features of modern systems. But trying to get the right library built can become a nightmare as soon as you rely on other libraries that may or may not have these features in the first place... In this post, I detail the hacks I made to the ./configure-based build system of Yices, a C&#43;&#43; library.
      
      </description>
    </item>
    <item>
      <title>Weird Api Choices</title>
      <link>https://maelvls.dev/do-not-share-yet/weird-api-choices/</link>
      <pubDate>Fri, 29 May 2020 08:35:36 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/weird-api-choices/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>Github Actions with a private Terraform module</title>
      <link>https://maelvls.dev/do-not-share-yet/gh-actions-with-tf-private-repo/</link>
      <pubDate>Sat, 09 May 2020 16:02:26 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/gh-actions-with-tf-private-repo/</guid>
      <description>
      
      Terraform makes it easy to manage infrastructure at scale; you
might want to share code between modules, and that&#39;s where it becomes tricky.
In this post, I try to give some clues on how to use terraform across private
Github repos.

      
      </description>
    </item>
    <item>
      <title>Writing a good Go SDK</title>
      <link>https://maelvls.dev/do-not-share-yet/writing-a-good-go-sdk/</link>
      <pubDate>Fri, 08 May 2020 15:00:27 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/writing-a-good-go-sdk/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>A ChatOps bot using Github Actions</title>
      <link>https://maelvls.dev/do-not-share-yet/chatops-github-actions/</link>
      <pubDate>Fri, 08 May 2020 14:40:31 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/chatops-github-actions/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>Slack: don&#39;t miss any channels!</title>
      <link>https://maelvls.dev/do-not-share-yet/slack-dont-miss-channels/</link>
      <pubDate>Fri, 08 May 2020 10:37:20 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/slack-dont-miss-channels/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>Everything About Docker</title>
      <link>https://maelvls.dev/do-not-share-yet/everything-about-docker/</link>
      <pubDate>Thu, 30 Apr 2020 08:59:06 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/everything-about-docker/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>Unicode</title>
      <link>https://maelvls.dev/do-not-share-yet/unicode/</link>
      <pubDate>Mon, 27 Apr 2020 17:59:01 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/unicode/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>MetalLB vs. K3s servicelb</title>
      <link>https://maelvls.dev/do-not-share-yet/metallb-vs-k3s-servicelb/</link>
      <pubDate>Sat, 25 Apr 2020 12:25:02 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/metallb-vs-k3s-servicelb/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>Setting Up Concourse</title>
      <link>https://maelvls.dev/do-not-share-yet/setting-up-concourse/</link>
      <pubDate>Wed, 22 Apr 2020 17:37:12 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/setting-up-concourse/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>Learning Kubernetes Controllers</title>
      <link>https://maelvls.dev/do-not-share-yet/learning-kubernetes-controllers/</link>
      <pubDate>Wed, 22 Apr 2020 11:58:26 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/learning-kubernetes-controllers/</guid>
      <description>
      
      Kubernetes&#39; extensibility is probably its biggest strength. Controllers and
CRDs are all over the place. But finding the right information to begin
writing a controller isn&#39;t easy due to the sheer amount of tribal knowledge
scattered everywhere. Here are some links to help you start.

      
      </description>
    </item>
    <item>
      <title>Go, pointers and data ownership</title>
      <link>https://maelvls.dev/do-not-share-yet/go-pointers-and-ownership/</link>
      <pubDate>Tue, 21 Apr 2020 08:17:37 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/go-pointers-and-ownership/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>A proper prompt</title>
      <link>https://maelvls.dev/do-not-share-yet/proper-prompt/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/proper-prompt/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>Kubernetes level-based behaviour</title>
      <link>https://maelvls.dev/do-not-share-yet/kubernetes-level-based-state/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/kubernetes-level-based-state/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>BGP 101</title>
      <link>https://maelvls.dev/do-not-share-yet/bgp-101/</link>
      <pubDate>Sun, 19 Apr 2020 17:51:55 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/bgp-101/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>Kubeconfigs and Certs</title>
      <link>https://maelvls.dev/do-not-share-yet/kubeconfigs-and-certs/</link>
      <pubDate>Sat, 18 Apr 2020 22:14:07 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/kubeconfigs-and-certs/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>Deep Dive into Go Assembly</title>
      <link>https://maelvls.dev/do-not-share-yet/deep-dive-go-assembly/</link>
      <pubDate>Thu, 16 Apr 2020 15:42:35 +0200</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/deep-dive-go-assembly/</guid>
      <description>
      
      
      
      </description>
    </item>
    <item>
      <title>The Client-go Transitive Hell</title>
      <link>https://maelvls.dev/do-not-share-yet/client-go-transitive-hell/</link>
      <pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/client-go-transitive-hell/</guid>
      <description>
      
      Client-go is the client library that allows anyone (including Kubernetes itself) to talk to the Kubernetes apiserver. Recently, the Kubernetes team chose to release a breaking version of client-go that adds support for context.Context, without really giving anyone notice. In this post, I detail the workaround and what that happened.
      
      </description>
    </item>
    <item>
      <title>How do packets find their way back?</title>
      <link>https://maelvls.dev/do-not-share-yet/how-do-packets-come-back/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/how-do-packets-come-back/</guid>
      <description>
      
      In one of my previous posts, I studied how traffic flows when using
Kubernetes Services. While drawing the last diagram, I did not clearly
see how traffic could make its way back to the user. In this
post, I focus on how packets find their way back and what makes stateless
rewriting interesting.

      
      </description>
    </item>
    <item>
      <title>My home office setup in 2020</title>
      <link>https://maelvls.dev/do-not-share-yet/home-office-2020/</link>
      <pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/home-office-2020/</guid>
      <description>
      
      Here is what my home office looks like in 2020 and what changed between 2019 and 2020!
      
      </description>
    </item>
    <item>
      <title>Migrating from GKE to Civo&#39;s K3s</title>
      <link>https://maelvls.dev/do-not-share-yet/from-gke-to-civo-k3s/</link>
      <pubDate>Sun, 22 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/from-gke-to-civo-k3s/</guid>
      <description>
      
      My free trial on GKE was ending in 2 days and I had to find a way to migrate away. I decided to switch to Civo&#39;s managed K3s.
      
      </description>
    </item>
    <item>
      <title>The Packet&#39;s-Eye View of a Kubernetes Service</title>
      <link>https://maelvls.dev/do-not-share-yet/packets-eye-kubernetes-service/</link>
      <pubDate>Sat, 14 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/packets-eye-kubernetes-service/</guid>
      <description>
      
      The Service and Ingress respectively brings L4 and L7 traffics to your
pods. In this article, I focus on how traffic flows in and what are the
interactions between the ingress controller and the &#34;service-lb controller&#34;
(the thing that creates the external load balancer). I also detail how the
`hostPort` approach shapes traffic.

      
      </description>
    </item>
    <item>
      <title>You should write comments</title>
      <link>https://maelvls.dev/do-not-share-yet/you-should-write-comments/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/you-should-write-comments/</guid>
      <description>
      
      We often talk about avoiding unecessary comments that needlessly paraphrase
what the code does. In this article, I gathered some thoughts about why
writing comments is as important as writing the code itself.

      
      </description>
    </item>
    <item>
      <title>Debugging Kubernetes Networking: my kube-dns is not working!</title>
      <link>https://maelvls.dev/do-not-share-yet/debugging-kubernetes-networking/</link>
      <pubDate>Sun, 26 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/debugging-kubernetes-networking/</guid>
      <description>
      
      Some pods were unable to connect to the kube-proxy pod on one of my GKE
Kubernetes clusters. This post present an in-depth investigation using
tcpdump, wireshark and iptables tracing.

      
      </description>
    </item>
    <item>
      <title>Avoid GKE&#39;s expensive load balancer by using hostPort</title>
      <link>https://maelvls.dev/do-not-share-yet/avoid-gke-lb-with-hostport/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/avoid-gke-lb-with-hostport/</guid>
      <description>
      
      I want to avoid using the expensive Google Network Load Balancer and
instead do the load balancing in-cluster using akrobateo, which
acts as a LoadBalancer controller.

      
      </description>
    </item>
    <item>
      <title>What to do when Go ignores HTTP_PROXY for 127.0.0.1</title>
      <link>https://maelvls.dev/do-not-share-yet/go-ignores-proxy-localhost/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maelvls.dev/do-not-share-yet/go-ignores-proxy-localhost/</guid>
      <description>
      
      At some point, the Go team chose to disable the proxy for requests coming
from localhost or 127.0.0.1. This is annoying when debugging services
locally.

      
      </description>
    </item>
    
  </channel>
</rss>
